import streamlit as st
import pandas as pd
import plotly.express as px

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
GOOGLE_SHEET_ID = "1v6GS19Ib3wnl5RGpDz31KPzDJ5T1pxd6rx1aTYzy63k"

# –ù–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–æ–≤ ‚Äî —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ —Ç–≤–æ–µ–π —Ç–∞–±–ª–∏—Ü–µ
SHEETS = [
    "jan", "feb", "mar", "apr", "may", "june", "jule", 
    "aug", "sept", "oct", "nov", "dec", "gen"
]

@st.cache_data(ttl=300)  # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
def load_sheet(sheet_name):
    url = f"https://docs.google.com/spreadsheets/d/{GOOGLE_SHEET_ID}/gviz/tq?tqx=out:csv&sheet={sheet_name}"
    try:
        return pd.read_csv(url)
    except Exception as e:
        st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–∏—Å—Ç '{sheet_name}'. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Ç–∞–±–ª–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
        return pd.DataFrame()

# === –ò–ù–¢–ï–†–§–ï–ô–° ===
st.set_page_config(page_title="üìä –ú–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã", layout="wide")
st.title("üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –º–µ—Å—è—Ü–∞–º –∏ –≥–æ–¥—É")

# –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π
def format_label(name):
    if name == "gen":
        return "üìà –ì–æ–¥–æ–≤–æ–π –æ—Ç—á—ë—Ç"
    months = {
        "jan": "–Ø–Ω–≤–∞—Ä—å", "feb": "–§–µ–≤—Ä–∞–ª—å", "mar": "–ú–∞—Ä—Ç", "apr": "–ê–ø—Ä–µ–ª—å",
        "may": "–ú–∞–π", "june": "–ò—é–Ω—å", "jule": "–ò—é–ª—å", "aug": "–ê–≤–≥—É—Å—Ç",
        "sept": "–°–µ–Ω—Ç—è–±—Ä—å", "oct": "–û–∫—Ç—è–±—Ä—å", "nov": "–ù–æ—è–±—Ä—å", "dec": "–î–µ–∫–∞–±—Ä—å"
    }
    return months.get(name, name.capitalize())

selected_sheet = st.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥",
    options=SHEETS,
    format_func=format_label
)

df = load_sheet(selected_sheet)

if df.empty:
    st.info("–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –ª–∏—Å—Ç –ø—É—Å—Ç.")
else:
    period_name = "–ì–æ–¥–æ–≤–æ–π –æ—Ç—á—ë—Ç" if selected_sheet == "gen" else format_label(selected_sheet)
    st.subheader(f"–î–∞–Ω–Ω—ã–µ –∑–∞ {period_name}")
    st.dataframe(df, use_container_width=True)

    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞, –µ—Å–ª–∏ –µ—Å—Ç—å —á–∏—Å–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    numeric_cols = df.select_dtypes(include=['number']).columns.tolist()
    if numeric_cols:
        st.subheader("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è")
        x_options = df.columns.tolist()
        y_options = numeric_cols

        col1, col2 = st.columns(2)
        with col1:
            x_col = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è (–æ—Å—å X)", x_options, index=0)
        with col2:
            y_col = st.selectbox("–ó–Ω–∞—á–µ–Ω–∏–µ (–æ—Å—å Y)", y_options, index=0)

        if x_col and y_col:
            fig = px.bar(
                df,
                x=x_col,
                y=y_col,
                color_discrete_sequence=["#4A90E2"],
                title=f"{y_col} –ø–æ {x_col}"
            )
            fig.update_layout(
                xaxis_title=x_col,
                yaxis_title=y_col,
                plot_bgcolor="rgba(0,0,0,0)",
                paper_bgcolor="rgba(0,0,0,0)"
            )
            st.plotly_chart(fig, use_container_width=True)
